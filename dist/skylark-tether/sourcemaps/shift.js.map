{"version":3,"sources":["shift.js"],"names":["define","typecheck","[object Object]","top","left","this","options","shift","shiftTop","shiftLeft","isFunction","call","isString","split","parseFloat"],"mappings":";;;;;;;AAAAA,QAAQ,sBAAuB,SAAUC,GACrC,aACA,OACIC,UAASC,IAACA,EAAGC,KAAEA,IACX,IAAKC,KAAKC,QAAQC,MACd,OAEJ,IAOIC,EAAUC,GAPVF,MAACA,GAASF,KAAKC,QAsBnB,OArBIL,EAAUS,WAAWH,KACrBA,EAAQA,EAAMI,KAAKN,MACfF,IAAAA,EACAC,KAAAA,KAIJH,EAAUW,SAASL,KACnBA,EAAQA,EAAMM,MAAM,MACd,GAAKN,EAAM,IAAMA,EAAM,IAC5BC,EAAUC,GAAaF,EACxBC,EAAWM,WAAWN,EAAU,IAChCC,EAAYK,WAAWL,EAAW,MAEjCD,EAAUC,IACPF,EAAMJ,IACNI,EAAMH,OAMVD,IAHJA,GAAOK,EAIHJ,KAHJA,GAAQK","file":"../shift.js","sourcesContent":["define(['./utils/type-check'], function (typecheck) {\n    'use strict';\n    return {\n        position({top, left}) {\n            if (!this.options.shift) {\n                return;\n            }\n            let {shift} = this.options;\n            if (typecheck.isFunction(shift)) {\n                shift = shift.call(this, {\n                    top,\n                    left\n                });\n            }\n            let shiftTop, shiftLeft;\n            if (typecheck.isString(shift)) {\n                shift = shift.split(' ');\n                shift[1] = shift[1] || shift[0];\n                [shiftTop, shiftLeft] = shift;\n                shiftTop = parseFloat(shiftTop, 10);\n                shiftLeft = parseFloat(shiftLeft, 10);\n            } else {\n                [shiftTop, shiftLeft] = [\n                    shift.top,\n                    shift.left\n                ];\n            }\n            top += shiftTop;\n            left += shiftLeft;\n            return {\n                top,\n                left\n            };\n        }\n    };\n});"]}