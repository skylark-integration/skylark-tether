{"version":3,"sources":["abutment.js"],"names":["define","_classes","deferred","bounds","[object Object]","top","left","height","width","this","cache","getBounds","element","targetPos","getTargetBounds","bottom","right","abutted","forEach","side","targetPosSide","push","classes","classPrefix","options","all","getClass","length","add","defer","addTargetClasses","updateClasses","target"],"mappings":";;;;;;;AAAAA,QACI,kBACA,mBACA,kBACD,SAAUC,EAAUC,EAAUC,GAC7B,aACA,OACIC,UAASC,IAACA,EAAGC,KAAEA,IACX,MAAMC,OAACA,EAAMC,MAAEA,GAASC,KAAKC,MAAM,iBAAkB,IAC1CP,EAAOQ,UAAUF,KAAKG,UAE3BC,EAAYJ,KAAKK,kBACjBC,EAASV,EAAME,EACfS,EAAQV,EAAOE,EACfS,KACFZ,GAAOQ,EAAUE,QAAUA,GAAUF,EAAUR,MAE3C,OACA,SACFa,QAAQC,IACN,MAAMC,EAAgBP,EAAUM,GAC5BC,IAAkBd,GAAQc,IAAkBJ,GAC5CC,EAAQI,KAAKF,KAIrBb,GAAQO,EAAUG,OAASA,GAASH,EAAUP,OAE1C,MACA,UACFY,QAAQC,IACN,MAAMC,EAAgBP,EAAUM,GAC5BC,IAAkBf,GAAOe,IAAkBL,GAC3CE,EAAQI,KAAKF,KAIzB,MAMMG,QAACA,EAAOC,YAAEA,GAAed,KAAKe,QAiBpC,OAhBAf,KAAKgB,IAAIJ,KAAKpB,EAASyB,SAAS,UAAWJ,EAASC,KANhD,OACA,MACA,QACA,UAIEL,QAAQC,IACVV,KAAKgB,IAAIJ,QAASpB,EAASyB,SAAS,UAAWJ,EAASC,MAAkBJ,OAE1EF,EAAQU,QACRlB,KAAKmB,IAAIP,KAAKpB,EAASyB,SAAS,UAAWJ,EAASC,IAExDN,EAAQC,QAAQC,IACZV,KAAKmB,IAAIP,QAASpB,EAASyB,SAAS,UAAWJ,EAASC,MAAkBJ,OAE9EjB,EAAS2B,MAAM,MAC6B,IAAlCpB,KAAKe,QAAQM,kBACf7B,EAAS8B,cAActB,KAAKuB,OAAQvB,KAAKmB,IAAKnB,KAAKgB,KAEvDxB,EAAS8B,cAActB,KAAKG,QAASH,KAAKmB,IAAKnB,KAAKgB,QAEjD","file":"../abutment.js","sourcesContent":["define([\n    './utils/classes',\n    './utils/deferred',\n    './utils/bounds'\n], function (_classes, deferred, bounds) {\n    'use strict';\n    return {\n        position({top, left}) {\n            const {height, width} = this.cache('element-bounds', () => {\n                return bounds.getBounds(this.element);\n            });\n            const targetPos = this.getTargetBounds();\n            const bottom = top + height;\n            const right = left + width;\n            const abutted = [];\n            if (top <= targetPos.bottom && bottom >= targetPos.top) {\n                [\n                    'left',\n                    'right'\n                ].forEach(side => {\n                    const targetPosSide = targetPos[side];\n                    if (targetPosSide === left || targetPosSide === right) {\n                        abutted.push(side);\n                    }\n                });\n            }\n            if (left <= targetPos.right && right >= targetPos.left) {\n                [\n                    'top',\n                    'bottom'\n                ].forEach(side => {\n                    const targetPosSide = targetPos[side];\n                    if (targetPosSide === top || targetPosSide === bottom) {\n                        abutted.push(side);\n                    }\n                });\n            }\n            const sides = [\n                'left',\n                'top',\n                'right',\n                'bottom'\n            ];\n            const {classes, classPrefix} = this.options;\n            this.all.push(_classes.getClass('abutted', classes, classPrefix));\n            sides.forEach(side => {\n                this.all.push(`${ _classes.getClass('abutted', classes, classPrefix) }-${ side }`);\n            });\n            if (abutted.length) {\n                this.add.push(_classes.getClass('abutted', classes, classPrefix));\n            }\n            abutted.forEach(side => {\n                this.add.push(`${ _classes.getClass('abutted', classes, classPrefix) }-${ side }`);\n            });\n            deferred.defer(() => {\n                if (!(this.options.addTargetClasses === false)) {\n                    _classes.updateClasses(this.target, this.add, this.all);\n                }\n                _classes.updateClasses(this.element, this.add, this.all);\n            });\n            return true;\n        }\n    };\n});"]}