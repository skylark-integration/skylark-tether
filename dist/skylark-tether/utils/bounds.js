/**
 * skylark-tether - A version of tether that ported to running on skylarkjs ui.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-tether/
 * @license MIT
 */
define(["./deferred","./general","./type-check"],function(t,e,i){"use strict";const n={};let h=null;function o(o,l){let f;l===document?(f=document,l=document.documentElement):f=l.ownerDocument;const r=f.documentElement,g=d(l),c=function(o){let l=h;l&&o.contains(l)||((l=document.createElement("div")).setAttribute("data-tether-id",e.uniqueId()),e.extend(l.style,{top:0,left:0,position:"absolute"}),o.appendChild(l),h=l);const f=l.getAttribute("data-tether-id");i.isUndefined(n[f])&&(n[f]=d(l),t.defer(()=>{delete n[f]}));return n[f]}(o);return g.top-=c.top,g.left-=c.left,i.isUndefined(g.width)&&(g.width=document.body.scrollWidth-g.left-g.right),i.isUndefined(g.height)&&(g.height=document.body.scrollHeight-g.top-g.bottom),g.top=g.top-r.clientTop,g.left=g.left-r.clientLeft,g.right=f.body.clientWidth-g.width-g.left,g.bottom=f.body.clientHeight-g.height-g.top,g}function d(t){let e=t.getBoundingClientRect(),i={};for(let t in e)i[t]=e[t];try{if(t.ownerDocument!==document){let{frameElement:e}=t.ownerDocument.defaultView;if(e){let t=d(e);i.top+=t.top,i.bottom+=t.top,i.left+=t.left,i.right+=t.left}}}catch(t){}return i}return{getBounds:o,getScrollHandleBounds:function(t,e){let i;const n=e.scrollTop,h=e===document.body;h?(e=document.documentElement,i={left:pageXOffset,top:pageYOffset,height:innerHeight,width:innerWidth}):i=o(t,e);const d=getComputedStyle(e);let l=0;(e.scrollWidth>e.clientWidth||[d.overflow,d.overflowX].indexOf("scroll")>=0||!h)&&(l=15);const f=i.height-parseFloat(d.borderTopWidth)-parseFloat(d.borderBottomWidth)-l,r={width:15,height:.975*f*(f/e.scrollHeight),left:i.left+i.width-parseFloat(d.borderLeftWidth)-15};let g=0;f<408&&h&&(g=-11e-5*Math.pow(f,2)-.00727*f+22.58),h||(r.height=Math.max(r.height,24));const c=n/(e.scrollHeight-f);return r.top=c*(f-r.height-g)+i.top+parseFloat(d.borderTopWidth),h&&(r.height=Math.max(r.height,24)),r},getVisibleBounds:function(t,e){if(e===document.body)return{top:pageYOffset,left:pageXOffset,height:innerHeight,width:innerWidth};{const i=o(t,e),n={height:i.height,width:i.width,top:i.top,left:i.left};return n.height=Math.min(n.height,i.height-(pageYOffset-i.top)),n.height=Math.min(n.height,i.height-(i.top+i.height-(pageYOffset+innerHeight))),n.height=Math.min(innerHeight,n.height),n.height-=2,n.width=Math.min(n.width,i.width-(pageXOffset-i.left)),n.width=Math.min(n.width,i.width-(i.left+i.width-(pageXOffset+innerWidth))),n.width=Math.min(innerWidth,n.width),n.width-=2,n.top<pageYOffset&&(n.top=pageYOffset),n.left<pageXOffset&&(n.left=pageXOffset),n}},removeUtilElements:function(t){h&&t.removeChild(h),h=null}}});
//# sourceMappingURL=../sourcemaps/utils/bounds.js.map
